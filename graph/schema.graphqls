# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type ServerStatus {
  kite: Boolean!
  db: Boolean!
  env: Boolean!
}

input OrderCreate {
  id: ID!
  strategy: String!       # ORB-Force	
  symbol: String!         # BANKNIFTY
  trade_type: String!     # eq,fut,opt
  Csize: Int!                 # 5 (min)
  Signal: String!             # Bullish
  Entry:  Float!                # 35673.4
  Target: Float!                # 36065.8
  SL:     Float!                #	35662.2
  StopLoss:          Float!     # 1
  DeepStopLoss:      Float!     # 10
  DelayedStopLoss:   Int!       # 00Min
  StallDetectPeriod: Int!       # 30Min
  TrailTarget:       Boolean!   # 1
  PositionRevarsal:  Boolean!   # 1
}

type OrderInfo {
  id: ID!
  strategy: String!       # ORB-Force	
  symbol: String!         # BANKNIFTY
  trade_type: String!     # eq,fut,opt
  Csize: Int!                 # 5 (min)
  Signal: String!             # Bullish
  Entry:  Float!                # 35673.4
  Target: Float!                # 36065.8
  SL:     Float!                #	35662.2
  StopLoss:          Float!     # 1
  DeepStopLoss:      Float!     # 10
  DelayedStopLoss:   Int!       # 00Min
  StallDetectPeriod: Int!       # 30Min
  TrailTarget:       Boolean!   # 1
  PositionRevarsal:  Boolean!   # 1  
  orderinfo: String!
  timestamp: String! 
  status: String!  
  EntryTime:  String            # 09:30
  Exit:       Float            # 35351.8
  ExitTime:   String            #15:20
  Reason:     String            # EoD
  Result:     Float            # -321.6
  ResultPerc: Float            
  SMax:       Float            # 35711.6
  SMaxD:      Float            # 38.2
  SMaxTime:   String            # 09:34
  SMin:       Float            # 35251.6
  SMinD:      Float            # 421.8
  SMinTime:   String            # 11:51
  ExitCriteria: String          #
}




type Query {
  orders: [OrderInfo!]!
}

type Mutation {
  placeOrder(input: OrderCreate!): OrderInfo!
}
